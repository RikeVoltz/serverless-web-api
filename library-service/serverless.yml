service: library

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-2
  environment:
    BOOK_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-2:*:*"

functions:
  bookSubmission:
    handler: api/book.submit
    memorySize: 128
    description: Submit book information.
    events:
      - http:
          path: books
          method: post
  listBooks:
    handler: api/book.list
    memorySize: 128
    description: List all books
    events:
      - http:
          path: books
          method: get
  bookDetails:
    handler: api/book.get
    events:
      - http:
          path: book/{id}
          method: get
      - http:
          path: book/ISBN/{ISBN}
          method: get
  bookDelete:
    handler: api/book.delete
    events:
      - http:
          path: book/{id}
          method: delete
  bookUpdate:
    handler: api/book.update
    events:
      - http:
          path: book/{id}
          method: put

resources:
  Resources:
    BooksDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.BOOK_TABLE}
